---
# Redis ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: database
  labels:
    app: redis
    component: cache
data:
  redis.conf: |
    # Redis configuration optimized for caching and job queue workloads

    # Network settings
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # General settings
    daemonize no
    supervised no
    pidfile /var/run/redis.pid
    loglevel notice
    logfile ""
    databases 16

    # Persistence settings for reliability
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data

    # AOF (Append Only File) for better durability
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes

    # Memory management optimized for shared use
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5

    # Lazy freeing for better performance
    lazyfree-lazy-eviction yes
    lazyfree-lazy-expire yes
    lazyfree-lazy-server-del yes
    replica-lazy-flush yes

    # Client settings
    timeout 0
    tcp-keepalive 300

    # Security settings (no password for internal cluster use)
    protected-mode no

    # Performance tuning
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100

    # Active rehashing
    activerehashing yes

    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60

    # Client query buffer limit
    client-query-buffer-limit 1gb

    # Protocol max bulk length
    proto-max-bulk-len 512mb

    # Frequency of rehashing
    hz 10

    # Enable dynamic HZ
    dynamic-hz yes

    # AOF rewrite incremental fsync
    aof-rewrite-incremental-fsync yes

    # RDB save incremental fsync
    rdb-save-incremental-fsync yes

    # Jemalloc background thread
    jemalloc-bg-thread yes

    # Enable keyspace notifications for monitoring
    notify-keyspace-events Ex

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: database
  labels:
    app: redis
    component: cache
spec:
  replicas: 1
  strategy:
    type: Recreate # Required for persistent volumes
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6379"
        prometheus.io/path: "/metrics"
    spec:
      # Pin to node05 for NVMe performance
      nodeSelector:
        kubernetes.io/hostname: node05
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - node05
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          # Command to start Redis with custom configuration
          command:
            - redis-server
            - /etc/redis/redis.conf
          # Resource limits optimized for shared caching workload
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          # Volume mounts for NVMe storage and configuration
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
              readOnly: true
          # Health checks for Redis connectivity
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          # Startup probe for initial Redis setup
          startupProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 10
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: redis-config
          configMap:
            name: redis-config
      # Security context for proper file permissions
      securityContext:
        fsGroup: 999 # redis group
        runAsUser: 999 # redis user
        runAsNonRoot: true
      # Restart policy for cache reliability
      restartPolicy: Always

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: database
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app: redis
