apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: downloads
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: radarr
        image: linuxserver/radarr:latest
        ports:
        - containerPort: 7878
          name: http
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "UTC"
        - name: UMASK
          value: "022"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: radarr-config
          mountPath: /config
        - name: shared-downloads
          mountPath: /downloads
        - name: radarr-movies
          mountPath: /movies
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      volumes:
      - name: radarr-config
        persistentVolumeClaim:
          claimName: radarr-config-pvc
      - name: shared-downloads
        persistentVolumeClaim:
          claimName: shared-downloads-pvc
      - name: radarr-movies
        persistentVolumeClaim:
          claimName: radarr-movies-pvc
      nodeSelector:
        node-role.kubernetes.io/worker: worker
      tolerations:
      - key: "arm"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"